function setup() {
  CanvasX = 400
  CanvasY = 400
  Disruption1X = 150
  Disruption1Y = 200
  Disruption2X = 250
  Disruption2Y = 200
  Step = 20 
  createCanvas(CanvasX, CanvasY)

  
  //these relate to the 2 commented lines of code inside the nested loop, is supposed to make them different colors.
  //baseColorR = random(0,255)
  //baseColorG = random(0,255)
  //baseColorB = random(0,255)


//creates a square grid, and creates disruptions based on the distance of the squares from the 'disruption points'
  for(var j = 0; j<Step; j++){
    for(var i = 0; i<Step;i++){ 
      RandomX = random(1,100)/10
      RandomY = random(1,100)/10
      noFill()

      // adding these two lines of code completely break the positions of the squares for some reason.
      //randomChange = random(pow(5*sin(i/3+4.5), 2) * -1, pow(5*sin(i/3+4.5), 2))*3
      //fill(baseColorR+randomChange, baseColorG+randomChange,baseColorB+randomChange)
      
      
     //it seems like when you rotate the square, it will continue to create squares rotated in that direction, so in order to fix, i reversed the rotation after the creation of the square
      let distance1 = dist(Disruption1X,Disruption1Y,CanvasX/Step*i,CanvasY/Step*j)
      let distance2 = dist(Disruption2X,Disruption2Y,CanvasX/Step*i,CanvasY/Step*j)
      rotation = random(-PI,PI)/30
      if (distance1<70||distance2<70){
        rotate(rotation)
        square(CanvasX/Step*i+RandomX, CanvasY/Step*j+RandomY, CanvasX/Step)
        rotate(rotation *-1)
      } else if(distance1<90||distance2<110){
        rotate(rotation/5)
        square(CanvasX/Step*i+RandomX/2, CanvasY/Step*j+RandomY/2, CanvasX/Step)
        rotate(rotation *-1/5)
      } else{
        square(CanvasX/Step*i, CanvasY/Step*j, CanvasX/Step) 
      }
    }
  }
}
